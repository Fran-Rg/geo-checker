# set header_x_real_ip to remote_addr or http_cf_connecting_ip if present
map $http_cf_connecting_ip $header_x_real_ip {
  default $http_cf_connecting_ip;
  "" $remote_addr;
}

geoip2 /usr/share/geoip/GEOIP_EDITIONID.mmdb {
  $geoip2_data_country_code source=$header_x_real_ip country iso_code;
  $geoip2_data_country_name source=$header_x_real_ip country names en;
}

server_tokens off;

add_header Host                   $host;
add_header X-Real-IP              $header_x_real_ip;
add_header X-Forwarded-For        $http_x_forwarded_for;
add_header X-Geo-Country-Code     $geoip2_data_country_code;
add_header X-Geo-Country-Name     $geoip2_data_country_name;

log_format  main_geo  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                    '"$http_x_forwarded_for" "$http_x_real_ip" "$http_cf_connecting_ip" '
                    '"$geoip2_data_country_code" "$geoip2_data_country_name"';

access_log  /usr/local/openresty/nginx/logs/access.log  main_geo;
error_log /usr/local/openresty/nginx/logs/error.log;

server {
  listen       80;
  server_name  localhost;
  resolver 127.0.0.11 ipv6=off;

  location / {

    # set header_x_real_ip to http_x_real_ip if present
    if ($http_x_real_ip) {
      set $header_x_real_ip $http_x_real_ip;
    }

    default_type "application/json";
    content_by_lua_block {
      if ngx.var.geoip2_data_country_code and ngx.var.geoip2_data_country_name then
        ngx.say("{\"iso2Code\":\"" .. ngx.var.geoip2_data_country_code .. "\",\"name\":\"" .. ngx.var.geoip2_data_country_name .. "\"}")
      else
        ngx.say("{}")
      end
    }

  }

  location /favicon.ico {
    root /usr/local/openresty/nginx/html;
    try_files $uri =404;
  }

  location /health {
    add_header Content-Type text/plain;
    return 200 "OK";
  }
}
